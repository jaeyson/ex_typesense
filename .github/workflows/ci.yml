name: Run tests

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # versions are wrapped in quotes to preserve the exact versions
        # especially numbers that has "0" on right-most side (e.g. 26.0)
        typesense-version: ['28.0', '29.0']
        typesense-port: ['8108:8108']

    services:
      typesense:
        image: typesense/typesense:${{ matrix.typesense-version }}

    steps:
      - name: Start Typesense
        run: |
          docker run -id \
          -p ${{ matrix.typesense-port }} \
          --name typesense \
          -v /tmp/typesense-data:/data \
          -v /tmp/typesense-analytics-data:/analytics-data \
          typesense/typesense:${{ matrix.typesense-version}} \
          --api-key=xyz \
          --data-dir=/data \
          --enable-search-analytics=true \
          --analytics-dir=/analytics-data  \
          --analytics-flush-interval=60 \
          --analytics-minute-rate-limit=100 \
          --enable-cors

      - name: Wait for Typesense to be healthy
        shell: bash
        run: |
          start_time=$(date +%s)
          timeout=30
          counter=0
          echo "Waiting for Typesense to be healthy..."
          until curl -s http://localhost:8108/health | grep -q '"ok":true'; do
            if [ $counter -eq $timeout ]; then
              echo "Timed out waiting for Typesense to be healthy"
              exit 1
            fi
            sleep 1
            counter=$((counter + 1))
          done
          end_time=$(date +%s)
          elapsed=$((end_time - start_time))
          echo "Typesense healthcheck elapsed: ${elapsed}s"
